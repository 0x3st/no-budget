import{_ as s,c as a,a as p,o as t}from"./app-Dx2kQ-8P.js";const e={};function o(l,n){return t(),a("div",null,n[0]||(n[0]=[p(`<h1 id="examples" tabindex="-1"><a class="header-anchor" href="#examples"><span>Examples</span></a></h1><p>Practical examples and use cases for No Budget API.</p><h2 id="basic-usage-examples" tabindex="-1"><a class="header-anchor" href="#basic-usage-examples"><span>Basic Usage Examples</span></a></h2><h3 id="creating-your-first-bill" tabindex="-1"><a class="header-anchor" href="#creating-your-first-bill"><span>Creating Your First Bill</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token comment"># Income example</span></span>
<span class="line"><span class="token function">curl</span> <span class="token parameter variable">-X</span> POST https://your-worker.workers.dev/api/bills <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-H</span> <span class="token string">&quot;Content-Type: application/json&quot;</span> <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-d</span> <span class="token string">&#39;{</span>
<span class="line">    &quot;description&quot;: &quot;Salary payment&quot;,</span>
<span class="line">    &quot;type&quot;: &quot;receive&quot;,</span>
<span class="line">    &quot;amount&quot;: 3000.00,</span>
<span class="line">    &quot;tag&quot;: &quot;work&quot;,</span>
<span class="line">    &quot;category&quot;: &quot;income&quot;</span>
<span class="line">  }&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token comment"># Expense example  </span></span>
<span class="line"><span class="token function">curl</span> <span class="token parameter variable">-X</span> POST https://your-worker.workers.dev/api/bills <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-H</span> <span class="token string">&quot;Content-Type: application/json&quot;</span> <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-d</span> <span class="token string">&#39;{</span>
<span class="line">    &quot;description&quot;: &quot;Grocery shopping&quot;,</span>
<span class="line">    &quot;type&quot;: &quot;pay&quot;,</span>
<span class="line">    &quot;amount&quot;: 85.50,</span>
<span class="line">    &quot;tag&quot;: &quot;food&quot;,</span>
<span class="line">    &quot;category&quot;: &quot;groceries&quot;</span>
<span class="line">  }&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="retrieving-bills" tabindex="-1"><a class="header-anchor" href="#retrieving-bills"><span>Retrieving Bills</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token comment"># Get all bills</span></span>
<span class="line"><span class="token function">curl</span> https://your-worker.workers.dev/api/bills</span>
<span class="line"></span>
<span class="line"><span class="token comment"># Get bills with pagination</span></span>
<span class="line"><span class="token function">curl</span> <span class="token string">&quot;https://your-worker.workers.dev/api/bills?limit=10&amp;offset=0&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Filter by type</span></span>
<span class="line"><span class="token function">curl</span> <span class="token string">&quot;https://your-worker.workers.dev/api/bills?type=pay&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Filter by date range</span></span>
<span class="line"><span class="token function">curl</span> <span class="token string">&quot;https://your-worker.workers.dev/api/bills?start_date=2025-01-01&amp;end_date=2025-12-31&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="updating-bills" tabindex="-1"><a class="header-anchor" href="#updating-bills"><span>Updating Bills</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token function">curl</span> <span class="token parameter variable">-X</span> PUT https://your-worker.workers.dev/api/bills/550e8400-e29b-41d4-a716-446655440000 <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-H</span> <span class="token string">&quot;Content-Type: application/json&quot;</span> <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-d</span> <span class="token string">&#39;{</span>
<span class="line">    &quot;description&quot;: &quot;Updated grocery shopping&quot;,</span>
<span class="line">    &quot;amount&quot;: 92.75,</span>
<span class="line">    &quot;tag&quot;: &quot;food&quot;,</span>
<span class="line">    &quot;category&quot;: &quot;groceries&quot;</span>
<span class="line">  }&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="getting-statistics" tabindex="-1"><a class="header-anchor" href="#getting-statistics"><span>Getting Statistics</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token comment"># Overview dashboard</span></span>
<span class="line"><span class="token function">curl</span> https://your-worker.workers.dev/api/stats/overview</span>
<span class="line"></span>
<span class="line"><span class="token comment"># Monthly breakdown for 2025</span></span>
<span class="line"><span class="token function">curl</span> <span class="token string">&quot;https://your-worker.workers.dev/api/stats/monthly?year=2025&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Category analysis</span></span>
<span class="line"><span class="token function">curl</span> https://your-worker.workers.dev/api/stats/category</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 30-day trend</span></span>
<span class="line"><span class="token function">curl</span> <span class="token string">&quot;https://your-worker.workers.dev/api/stats/trend?days=30&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="javascript-integration" tabindex="-1"><a class="header-anchor" href="#javascript-integration"><span>JavaScript Integration</span></a></h2><h3 id="simple-budget-tracker" tabindex="-1"><a class="header-anchor" href="#simple-budget-tracker"><span>Simple Budget Tracker</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token keyword">class</span> <span class="token class-name">BudgetTracker</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">apiUrl</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>apiUrl <span class="token operator">=</span> apiUrl<span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">addExpense</span><span class="token punctuation">(</span>description<span class="token punctuation">,</span> amount<span class="token punctuation">,</span> category <span class="token operator">=</span> <span class="token string">&#39;other&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>apiUrl<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/api/bills</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;POST&#39;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token string-property property">&#39;Content-Type&#39;</span><span class="token operator">:</span> <span class="token string">&#39;application/json&#39;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">body</span><span class="token operator">:</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">        description<span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;pay&#39;</span><span class="token punctuation">,</span></span>
<span class="line">        amount<span class="token punctuation">,</span></span>
<span class="line">        category<span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">tag</span><span class="token operator">:</span> category</span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">return</span> <span class="token keyword">await</span> response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">addIncome</span><span class="token punctuation">(</span>description<span class="token punctuation">,</span> amount<span class="token punctuation">,</span> source <span class="token operator">=</span> <span class="token string">&#39;work&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>apiUrl<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/api/bills</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;POST&#39;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token string-property property">&#39;Content-Type&#39;</span><span class="token operator">:</span> <span class="token string">&#39;application/json&#39;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">body</span><span class="token operator">:</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">        description<span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;receive&#39;</span><span class="token punctuation">,</span></span>
<span class="line">        amount<span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">category</span><span class="token operator">:</span> <span class="token string">&#39;income&#39;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">tag</span><span class="token operator">:</span> source</span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">return</span> <span class="token keyword">await</span> response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">getMonthlyOverview</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>apiUrl<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/api/stats/overview</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token keyword">await</span> response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">getExpensesByCategory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>apiUrl<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/api/stats/category</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token keyword">await</span> response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Usage</span></span>
<span class="line"><span class="token keyword">const</span> tracker <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BudgetTracker</span><span class="token punctuation">(</span><span class="token string">&#39;https://your-worker.workers.dev&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Add some transactions</span></span>
<span class="line"><span class="token keyword">await</span> tracker<span class="token punctuation">.</span><span class="token function">addIncome</span><span class="token punctuation">(</span><span class="token string">&#39;Salary&#39;</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">,</span> <span class="token string">&#39;work&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">await</span> tracker<span class="token punctuation">.</span><span class="token function">addExpense</span><span class="token punctuation">(</span><span class="token string">&#39;Coffee&#39;</span><span class="token punctuation">,</span> <span class="token number">4.50</span><span class="token punctuation">,</span> <span class="token string">&#39;dining&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">await</span> tracker<span class="token punctuation">.</span><span class="token function">addExpense</span><span class="token punctuation">(</span><span class="token string">&#39;Gas&#39;</span><span class="token punctuation">,</span> <span class="token number">45.00</span><span class="token punctuation">,</span> <span class="token string">&#39;transport&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Get overview</span></span>
<span class="line"><span class="token keyword">const</span> overview <span class="token operator">=</span> <span class="token keyword">await</span> tracker<span class="token punctuation">.</span><span class="token function">getMonthlyOverview</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Current month balance:&#39;</span><span class="token punctuation">,</span> overview<span class="token punctuation">.</span>data<span class="token punctuation">.</span>currentMonth<span class="token punctuation">.</span>balance<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="react-hook-for-budget-data" tabindex="-1"><a class="header-anchor" href="#react-hook-for-budget-data"><span>React Hook for Budget Data</span></a></h3><div class="language-jsx line-numbers-mode" data-highlighter="prismjs" data-ext="jsx"><pre><code class="language-jsx"><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> useState<span class="token punctuation">,</span> useEffect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">useBudgetData</span><span class="token punctuation">(</span><span class="token parameter">apiUrl</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> <span class="token punctuation">[</span>bills<span class="token punctuation">,</span> setBills<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">const</span> <span class="token punctuation">[</span>overview<span class="token punctuation">,</span> setOverview<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">const</span> <span class="token punctuation">[</span>loading<span class="token punctuation">,</span> setLoading<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">const</span> <span class="token punctuation">[</span>error<span class="token punctuation">,</span> setError<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">const</span> <span class="token function-variable function">fetchBills</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>apiUrl<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/api/bills</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token keyword">await</span> response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token function">setBills</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>success <span class="token operator">?</span> data<span class="token punctuation">.</span>data<span class="token punctuation">.</span>bills <span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token function">setError</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">const</span> <span class="token function-variable function">fetchOverview</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>apiUrl<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/api/stats/overview</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token keyword">await</span> response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token function">setOverview</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>success <span class="token operator">?</span> data<span class="token punctuation">.</span>data <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token function">setError</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">const</span> <span class="token function-variable function">addBill</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">billData</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>apiUrl<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/api/bills</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;POST&#39;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">          <span class="token string-property property">&#39;Content-Type&#39;</span><span class="token operator">:</span> <span class="token string">&#39;application/json&#39;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">body</span><span class="token operator">:</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>billData<span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      </span>
<span class="line">      <span class="token keyword">if</span> <span class="token punctuation">(</span>response<span class="token punctuation">.</span>ok<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">await</span> <span class="token function">fetchBills</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">await</span> <span class="token function">fetchOverview</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token function">setError</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> <span class="token function-variable function">loadData</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token function">setLoading</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token function">fetchBills</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">fetchOverview</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token function">setLoading</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token function">loadData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>apiUrl<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="line">    bills<span class="token punctuation">,</span></span>
<span class="line">    overview<span class="token punctuation">,</span></span>
<span class="line">    loading<span class="token punctuation">,</span></span>
<span class="line">    error<span class="token punctuation">,</span></span>
<span class="line">    addBill<span class="token punctuation">,</span></span>
<span class="line">    <span class="token function-variable function">refresh</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token function">fetchBills</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">fetchOverview</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Usage in component</span></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">BudgetDashboard</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> <span class="token punctuation">{</span> bills<span class="token punctuation">,</span> overview<span class="token punctuation">,</span> loading<span class="token punctuation">,</span> addBill <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useBudgetData</span><span class="token punctuation">(</span><span class="token string">&#39;https://your-worker.workers.dev&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span>loading<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Loading...</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">return</span> <span class="token punctuation">(</span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Budget Overview</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">      </span><span class="token punctuation">{</span>overview <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Income: $</span><span class="token punctuation">{</span>overview<span class="token punctuation">.</span>currentMonth<span class="token punctuation">.</span>income<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Expenses: $</span><span class="token punctuation">{</span>overview<span class="token punctuation">.</span>currentMonth<span class="token punctuation">.</span>expenses<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Balance: $</span><span class="token punctuation">{</span>overview<span class="token punctuation">.</span>currentMonth<span class="token punctuation">.</span>balance<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">      <span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token plain-text"></span>
<span class="line">      </span>
<span class="line">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Recent Transactions</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">        </span><span class="token punctuation">{</span>bills<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">bill</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span></span>
<span class="line">          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>bill<span class="token punctuation">.</span>uuid<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">            </span><span class="token punctuation">{</span>bill<span class="token punctuation">.</span>description<span class="token punctuation">}</span><span class="token plain-text">: $</span><span class="token punctuation">{</span>bill<span class="token punctuation">.</span>amount<span class="token punctuation">}</span><span class="token plain-text"> (</span><span class="token punctuation">{</span>bill<span class="token punctuation">.</span>type<span class="token punctuation">}</span><span class="token plain-text">)</span>
<span class="line">          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token plain-text"></span>
<span class="line">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="python-integration" tabindex="-1"><a class="header-anchor" href="#python-integration"><span>Python Integration</span></a></h2><h3 id="personal-finance-analyzer" tabindex="-1"><a class="header-anchor" href="#personal-finance-analyzer"><span>Personal Finance Analyzer</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line"><span class="token keyword">import</span> requests</span>
<span class="line"><span class="token keyword">from</span> datetime <span class="token keyword">import</span> datetime<span class="token punctuation">,</span> timedelta</span>
<span class="line"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd</span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">FinanceAnalyzer</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> api_url<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        self<span class="token punctuation">.</span>api_url <span class="token operator">=</span> api_url</span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">get_bills</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> start_date<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> end_date<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> bill_type<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token triple-quoted-string string">&quot;&quot;&quot;Fetch bills with optional filtering&quot;&quot;&quot;</span></span>
<span class="line">        params <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span>
<span class="line">        <span class="token keyword">if</span> start_date<span class="token punctuation">:</span></span>
<span class="line">            params<span class="token punctuation">[</span><span class="token string">&#39;start_date&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> start_date</span>
<span class="line">        <span class="token keyword">if</span> end_date<span class="token punctuation">:</span></span>
<span class="line">            params<span class="token punctuation">[</span><span class="token string">&#39;end_date&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> end_date</span>
<span class="line">        <span class="token keyword">if</span> bill_type<span class="token punctuation">:</span></span>
<span class="line">            params<span class="token punctuation">[</span><span class="token string">&#39;type&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> bill_type</span>
<span class="line">            </span>
<span class="line">        response <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>api_url<span class="token punctuation">}</span></span><span class="token string">/api/bills&quot;</span></span><span class="token punctuation">,</span> params<span class="token operator">=</span>params<span class="token punctuation">)</span></span>
<span class="line">        data <span class="token operator">=</span> response<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        </span>
<span class="line">        <span class="token keyword">return</span> data<span class="token punctuation">[</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&#39;bills&#39;</span><span class="token punctuation">]</span> <span class="token keyword">if</span> data<span class="token punctuation">[</span><span class="token string">&#39;success&#39;</span><span class="token punctuation">]</span> <span class="token keyword">else</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">add_bill</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> description<span class="token punctuation">,</span> amount<span class="token punctuation">,</span> bill_type<span class="token punctuation">,</span> category<span class="token operator">=</span><span class="token string">&#39;other&#39;</span><span class="token punctuation">,</span> tag<span class="token operator">=</span><span class="token string">&#39;general&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token triple-quoted-string string">&quot;&quot;&quot;Add a new bill&quot;&quot;&quot;</span></span>
<span class="line">        bill_data <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token string">&#39;description&#39;</span><span class="token punctuation">:</span> description<span class="token punctuation">,</span></span>
<span class="line">            <span class="token string">&#39;type&#39;</span><span class="token punctuation">:</span> bill_type<span class="token punctuation">,</span></span>
<span class="line">            <span class="token string">&#39;amount&#39;</span><span class="token punctuation">:</span> amount<span class="token punctuation">,</span></span>
<span class="line">            <span class="token string">&#39;category&#39;</span><span class="token punctuation">:</span> category<span class="token punctuation">,</span></span>
<span class="line">            <span class="token string">&#39;tag&#39;</span><span class="token punctuation">:</span> tag</span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        </span>
<span class="line">        response <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span></span>
<span class="line">            <span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>api_url<span class="token punctuation">}</span></span><span class="token string">/api/bills&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">            json<span class="token operator">=</span>bill_data</span>
<span class="line">        <span class="token punctuation">)</span></span>
<span class="line">        </span>
<span class="line">        <span class="token keyword">return</span> response<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">get_spending_by_category</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token triple-quoted-string string">&quot;&quot;&quot;Get spending breakdown by category&quot;&quot;&quot;</span></span>
<span class="line">        response <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>api_url<span class="token punctuation">}</span></span><span class="token string">/api/stats/category&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">return</span> response<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">analyze_spending_trends</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> days<span class="token operator">=</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token triple-quoted-string string">&quot;&quot;&quot;Analyze spending trends over time&quot;&quot;&quot;</span></span>
<span class="line">        end_date <span class="token operator">=</span> datetime<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        start_date <span class="token operator">=</span> end_date <span class="token operator">-</span> timedelta<span class="token punctuation">(</span>days<span class="token operator">=</span>days<span class="token punctuation">)</span></span>
<span class="line">        </span>
<span class="line">        bills <span class="token operator">=</span> self<span class="token punctuation">.</span>get_bills<span class="token punctuation">(</span></span>
<span class="line">            start_date<span class="token operator">=</span>start_date<span class="token punctuation">.</span>isoformat<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">            end_date<span class="token operator">=</span>end_date<span class="token punctuation">.</span>isoformat<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">            bill_type<span class="token operator">=</span><span class="token string">&#39;pay&#39;</span></span>
<span class="line">        <span class="token punctuation">)</span></span>
<span class="line">        </span>
<span class="line">        <span class="token comment"># Convert to pandas DataFrame for analysis</span></span>
<span class="line">        df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>bills<span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">if</span> df<span class="token punctuation">.</span>empty<span class="token punctuation">:</span></span>
<span class="line">            <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span>
<span class="line">            </span>
<span class="line">        df<span class="token punctuation">[</span><span class="token string">&#39;time&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> pd<span class="token punctuation">.</span>to_datetime<span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">&#39;time&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line">        df<span class="token punctuation">[</span><span class="token string">&#39;date&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">&#39;time&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>dt<span class="token punctuation">.</span>date</span>
<span class="line">        </span>
<span class="line">        <span class="token comment"># Daily spending</span></span>
<span class="line">        daily_spending <span class="token operator">=</span> df<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&#39;date&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&#39;amount&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        </span>
<span class="line">        <span class="token comment"># Category breakdown</span></span>
<span class="line">        category_spending <span class="token operator">=</span> df<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&#39;category&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&#39;amount&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        </span>
<span class="line">        <span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token string">&#39;daily_spending&#39;</span><span class="token punctuation">:</span> daily_spending<span class="token punctuation">.</span>to_dict<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token string">&#39;category_breakdown&#39;</span><span class="token punctuation">:</span> category_spending<span class="token punctuation">.</span>to_dict<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token string">&#39;total_spent&#39;</span><span class="token punctuation">:</span> df<span class="token punctuation">[</span><span class="token string">&#39;amount&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token string">&#39;average_daily&#39;</span><span class="token punctuation">:</span> daily_spending<span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token string">&#39;max_daily&#39;</span><span class="token punctuation">:</span> daily_spending<span class="token punctuation">.</span><span class="token builtin">max</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Usage example</span></span>
<span class="line">analyzer <span class="token operator">=</span> FinanceAnalyzer<span class="token punctuation">(</span><span class="token string">&#39;https://your-worker.workers.dev&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Add some sample data</span></span>
<span class="line">analyzer<span class="token punctuation">.</span>add_bill<span class="token punctuation">(</span><span class="token string">&#39;Morning coffee&#39;</span><span class="token punctuation">,</span> <span class="token number">4.50</span><span class="token punctuation">,</span> <span class="token string">&#39;pay&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;dining&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;coffee&#39;</span><span class="token punctuation">)</span></span>
<span class="line">analyzer<span class="token punctuation">.</span>add_bill<span class="token punctuation">(</span><span class="token string">&#39;Lunch&#39;</span><span class="token punctuation">,</span> <span class="token number">12.99</span><span class="token punctuation">,</span> <span class="token string">&#39;pay&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;dining&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;food&#39;</span><span class="token punctuation">)</span></span>
<span class="line">analyzer<span class="token punctuation">.</span>add_bill<span class="token punctuation">(</span><span class="token string">&#39;Freelance payment&#39;</span><span class="token punctuation">,</span> <span class="token number">500.00</span><span class="token punctuation">,</span> <span class="token string">&#39;receive&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;income&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;work&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Analyze trends</span></span>
<span class="line">trends <span class="token operator">=</span> analyzer<span class="token punctuation">.</span>analyze_spending_trends<span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;Total spent in last 30 days: $</span><span class="token interpolation"><span class="token punctuation">{</span>trends<span class="token punctuation">[</span><span class="token string">&#39;total_spent&#39;</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token format-spec">.2f</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;Average daily spending: $</span><span class="token interpolation"><span class="token punctuation">{</span>trends<span class="token punctuation">[</span><span class="token string">&#39;average_daily&#39;</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token format-spec">.2f</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Get category breakdown</span></span>
<span class="line">categories <span class="token operator">=</span> analyzer<span class="token punctuation">.</span>get_spending_by_category<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">if</span> categories<span class="token punctuation">[</span><span class="token string">&#39;success&#39;</span><span class="token punctuation">]</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">for</span> cat <span class="token keyword">in</span> categories<span class="token punctuation">[</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&#39;categories&#39;</span><span class="token punctuation">]</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>cat<span class="token punctuation">[</span><span class="token string">&#39;category&#39;</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span><span class="token string">: $</span><span class="token interpolation"><span class="token punctuation">{</span>cat<span class="token punctuation">[</span><span class="token string">&#39;expenses&#39;</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token format-spec">.2f</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="mobile-app-integration-react-native" tabindex="-1"><a class="header-anchor" href="#mobile-app-integration-react-native"><span>Mobile App Integration (React Native)</span></a></h2><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token comment">// BudgetService.js</span></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">BudgetService</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">apiUrl</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>apiUrl <span class="token operator">=</span> apiUrl<span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">makeRequest</span><span class="token punctuation">(</span><span class="token parameter">endpoint<span class="token punctuation">,</span> options <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>apiUrl<span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>endpoint<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">          <span class="token string-property property">&#39;Content-Type&#39;</span><span class="token operator">:</span> <span class="token string">&#39;application/json&#39;</span><span class="token punctuation">,</span></span>
<span class="line">          <span class="token operator">...</span>options<span class="token punctuation">.</span>headers<span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token operator">...</span>options<span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">      <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token keyword">await</span> response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      </span>
<span class="line">      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>response<span class="token punctuation">.</span>ok<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>message <span class="token operator">||</span> <span class="token string">&#39;Request failed&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">      <span class="token keyword">return</span> data<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;API request failed:&#39;</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">throw</span> error<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">addExpense</span><span class="token punctuation">(</span><span class="token parameter">description<span class="token punctuation">,</span> amount<span class="token punctuation">,</span> category</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">makeRequest</span><span class="token punctuation">(</span><span class="token string">&#39;/api/bills&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;POST&#39;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">body</span><span class="token operator">:</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">        description<span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;pay&#39;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">amount</span><span class="token operator">:</span> <span class="token function">parseFloat</span><span class="token punctuation">(</span>amount<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        category<span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">tag</span><span class="token operator">:</span> category</span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">getRecentTransactions</span><span class="token punctuation">(</span><span class="token parameter">limit <span class="token operator">=</span> <span class="token number">20</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">makeRequest</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">/api/bills?limit=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>limit<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">getOverview</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">makeRequest</span><span class="token punctuation">(</span><span class="token string">&#39;/api/stats/overview&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Usage in React Native component</span></span>
<span class="line"><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState<span class="token punctuation">,</span> useEffect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> View<span class="token punctuation">,</span> Text<span class="token punctuation">,</span> TextInput<span class="token punctuation">,</span> Button<span class="token punctuation">,</span> FlatList <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react-native&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> budgetService <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BudgetService</span><span class="token punctuation">(</span><span class="token string">&#39;https://your-worker.workers.dev&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">BudgetApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> <span class="token punctuation">[</span>overview<span class="token punctuation">,</span> setOverview<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">const</span> <span class="token punctuation">[</span>transactions<span class="token punctuation">,</span> setTransactions<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">const</span> <span class="token punctuation">[</span>description<span class="token punctuation">,</span> setDescription<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">const</span> <span class="token punctuation">[</span>amount<span class="token punctuation">,</span> setAmount<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">loadData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">const</span> <span class="token function-variable function">loadData</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">const</span> <span class="token punctuation">[</span>overviewData<span class="token punctuation">,</span> transactionsData<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span></span>
<span class="line">        budgetService<span class="token punctuation">.</span><span class="token function">getOverview</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        budgetService<span class="token punctuation">.</span><span class="token function">getRecentTransactions</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">      <span class="token function">setOverview</span><span class="token punctuation">(</span>overviewData<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token function">setTransactions</span><span class="token punctuation">(</span>transactionsData<span class="token punctuation">.</span>data<span class="token punctuation">.</span>bills<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;Failed to load data:&#39;</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">const</span> <span class="token function-variable function">addExpense</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>description <span class="token operator">||</span> <span class="token operator">!</span>amount<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">await</span> budgetService<span class="token punctuation">.</span><span class="token function">addExpense</span><span class="token punctuation">(</span>description<span class="token punctuation">,</span> amount<span class="token punctuation">,</span> <span class="token string">&#39;other&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token function">setDescription</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token function">setAmount</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token function">loadData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Refresh data</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;Failed to add expense:&#39;</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">return</span> <span class="token punctuation">(</span></span>
<span class="line">    <span class="token operator">&lt;</span>View style<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token literal-property property">padding</span><span class="token operator">:</span> <span class="token number">20</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&gt;</span></span>
<span class="line">      <span class="token operator">&lt;</span>Text style<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token literal-property property">fontSize</span><span class="token operator">:</span> <span class="token number">24</span><span class="token punctuation">,</span> <span class="token literal-property property">marginBottom</span><span class="token operator">:</span> <span class="token number">20</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>Budget Tracker<span class="token operator">&lt;</span><span class="token operator">/</span>Text<span class="token operator">&gt;</span></span>
<span class="line">      </span>
<span class="line">      <span class="token punctuation">{</span>overview <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span></span>
<span class="line">        <span class="token operator">&lt;</span>View style<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token literal-property property">marginBottom</span><span class="token operator">:</span> <span class="token number">20</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&gt;</span></span>
<span class="line">          <span class="token operator">&lt;</span>Text<span class="token operator">&gt;</span>Current Balance<span class="token operator">:</span> $<span class="token punctuation">{</span>overview<span class="token punctuation">.</span>currentMonth<span class="token punctuation">.</span>balance<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>Text<span class="token operator">&gt;</span></span>
<span class="line">          <span class="token operator">&lt;</span>Text<span class="token operator">&gt;</span>This Month Income<span class="token operator">:</span> $<span class="token punctuation">{</span>overview<span class="token punctuation">.</span>currentMonth<span class="token punctuation">.</span>income<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>Text<span class="token operator">&gt;</span></span>
<span class="line">          <span class="token operator">&lt;</span>Text<span class="token operator">&gt;</span>This Month Expenses<span class="token operator">:</span> $<span class="token punctuation">{</span>overview<span class="token punctuation">.</span>currentMonth<span class="token punctuation">.</span>expenses<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>Text<span class="token operator">&gt;</span></span>
<span class="line">        <span class="token operator">&lt;</span><span class="token operator">/</span>View<span class="token operator">&gt;</span></span>
<span class="line">      <span class="token punctuation">)</span><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">      <span class="token operator">&lt;</span>TextInput</span>
<span class="line">        placeholder<span class="token operator">=</span><span class="token string">&quot;Description&quot;</span></span>
<span class="line">        value<span class="token operator">=</span><span class="token punctuation">{</span>description<span class="token punctuation">}</span></span>
<span class="line">        onChangeText<span class="token operator">=</span><span class="token punctuation">{</span>setDescription<span class="token punctuation">}</span></span>
<span class="line">        style<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token literal-property property">borderWidth</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">padding</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token literal-property property">marginBottom</span><span class="token operator">:</span> <span class="token number">10</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
<span class="line">      <span class="token operator">/</span><span class="token operator">&gt;</span></span>
<span class="line">      </span>
<span class="line">      <span class="token operator">&lt;</span>TextInput</span>
<span class="line">        placeholder<span class="token operator">=</span><span class="token string">&quot;Amount&quot;</span></span>
<span class="line">        value<span class="token operator">=</span><span class="token punctuation">{</span>amount<span class="token punctuation">}</span></span>
<span class="line">        onChangeText<span class="token operator">=</span><span class="token punctuation">{</span>setAmount<span class="token punctuation">}</span></span>
<span class="line">        keyboardType<span class="token operator">=</span><span class="token string">&quot;numeric&quot;</span></span>
<span class="line">        style<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token literal-property property">borderWidth</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">padding</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token literal-property property">marginBottom</span><span class="token operator">:</span> <span class="token number">10</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
<span class="line">      <span class="token operator">/</span><span class="token operator">&gt;</span></span>
<span class="line">      </span>
<span class="line">      <span class="token operator">&lt;</span>Button title<span class="token operator">=</span><span class="token string">&quot;Add Expense&quot;</span> onPress<span class="token operator">=</span><span class="token punctuation">{</span>addExpense<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">&gt;</span></span>
<span class="line"></span>
<span class="line">      <span class="token operator">&lt;</span>Text style<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token literal-property property">fontSize</span><span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token literal-property property">marginTop</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token literal-property property">marginBottom</span><span class="token operator">:</span> <span class="token number">10</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&gt;</span></span>
<span class="line">        Recent Transactions</span>
<span class="line">      <span class="token operator">&lt;</span><span class="token operator">/</span>Text<span class="token operator">&gt;</span></span>
<span class="line">      </span>
<span class="line">      <span class="token operator">&lt;</span>FlatList</span>
<span class="line">        data<span class="token operator">=</span><span class="token punctuation">{</span>transactions<span class="token punctuation">}</span></span>
<span class="line">        keyExtractor<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> item<span class="token punctuation">.</span>uuid<span class="token punctuation">}</span></span>
<span class="line">        renderItem<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> item <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span></span>
<span class="line">          <span class="token operator">&lt;</span>View style<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token literal-property property">padding</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token literal-property property">borderBottomWidth</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&gt;</span></span>
<span class="line">            <span class="token operator">&lt;</span>Text<span class="token operator">&gt;</span><span class="token punctuation">{</span>item<span class="token punctuation">.</span>description<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>Text<span class="token operator">&gt;</span></span>
<span class="line">            <span class="token operator">&lt;</span>Text<span class="token operator">&gt;</span>$<span class="token punctuation">{</span>item<span class="token punctuation">.</span>amount<span class="token punctuation">}</span> <span class="token operator">-</span> <span class="token punctuation">{</span>item<span class="token punctuation">.</span>category<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>Text<span class="token operator">&gt;</span></span>
<span class="line">          <span class="token operator">&lt;</span><span class="token operator">/</span>View<span class="token operator">&gt;</span></span>
<span class="line">        <span class="token punctuation">)</span><span class="token punctuation">}</span></span>
<span class="line">      <span class="token operator">/</span><span class="token operator">&gt;</span></span>
<span class="line">    <span class="token operator">&lt;</span><span class="token operator">/</span>View<span class="token operator">&gt;</span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="command-line-tool" tabindex="-1"><a class="header-anchor" href="#command-line-tool"><span>Command Line Tool</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token shebang important">#!/bin/bash</span></span>
<span class="line"><span class="token comment"># budget-cli.sh - Simple command line interface</span></span>
<span class="line"></span>
<span class="line"><span class="token assign-left variable">API_URL</span><span class="token operator">=</span><span class="token string">&quot;https://your-worker.workers.dev&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">case</span> <span class="token string">&quot;<span class="token variable">$1</span>&quot;</span> <span class="token keyword">in</span></span>
<span class="line">  <span class="token string">&quot;add-expense&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token function">curl</span> <span class="token parameter variable">-X</span> POST <span class="token string">&quot;<span class="token variable">$API_URL</span>/api/bills&quot;</span> <span class="token punctuation">\\</span></span>
<span class="line">      <span class="token parameter variable">-H</span> <span class="token string">&quot;Content-Type: application/json&quot;</span> <span class="token punctuation">\\</span></span>
<span class="line">      <span class="token parameter variable">-d</span> <span class="token string">&quot;{</span>
<span class="line">        <span class="token entity" title="\\&quot;">\\&quot;</span>description<span class="token entity" title="\\&quot;">\\&quot;</span>: <span class="token entity" title="\\&quot;">\\&quot;</span><span class="token variable">$2</span><span class="token entity" title="\\&quot;">\\&quot;</span>,</span>
<span class="line">        <span class="token entity" title="\\&quot;">\\&quot;</span>type<span class="token entity" title="\\&quot;">\\&quot;</span>: <span class="token entity" title="\\&quot;">\\&quot;</span>pay<span class="token entity" title="\\&quot;">\\&quot;</span>,</span>
<span class="line">        <span class="token entity" title="\\&quot;">\\&quot;</span>amount<span class="token entity" title="\\&quot;">\\&quot;</span>: <span class="token variable">$3</span>,</span>
<span class="line">        <span class="token entity" title="\\&quot;">\\&quot;</span>category<span class="token entity" title="\\&quot;">\\&quot;</span>: <span class="token entity" title="\\&quot;">\\&quot;</span><span class="token variable">\${4<span class="token operator">:-</span>other}</span><span class="token entity" title="\\&quot;">\\&quot;</span></span>
<span class="line">      }&quot;</span></span>
<span class="line">    <span class="token punctuation">;</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token string">&quot;add-income&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token function">curl</span> <span class="token parameter variable">-X</span> POST <span class="token string">&quot;<span class="token variable">$API_URL</span>/api/bills&quot;</span> <span class="token punctuation">\\</span></span>
<span class="line">      <span class="token parameter variable">-H</span> <span class="token string">&quot;Content-Type: application/json&quot;</span> <span class="token punctuation">\\</span></span>
<span class="line">      <span class="token parameter variable">-d</span> <span class="token string">&quot;{</span>
<span class="line">        <span class="token entity" title="\\&quot;">\\&quot;</span>description<span class="token entity" title="\\&quot;">\\&quot;</span>: <span class="token entity" title="\\&quot;">\\&quot;</span><span class="token variable">$2</span><span class="token entity" title="\\&quot;">\\&quot;</span>,</span>
<span class="line">        <span class="token entity" title="\\&quot;">\\&quot;</span>type<span class="token entity" title="\\&quot;">\\&quot;</span>: <span class="token entity" title="\\&quot;">\\&quot;</span>receive<span class="token entity" title="\\&quot;">\\&quot;</span>,</span>
<span class="line">        <span class="token entity" title="\\&quot;">\\&quot;</span>amount<span class="token entity" title="\\&quot;">\\&quot;</span>: <span class="token variable">$3</span>,</span>
<span class="line">        <span class="token entity" title="\\&quot;">\\&quot;</span>category<span class="token entity" title="\\&quot;">\\&quot;</span>: <span class="token entity" title="\\&quot;">\\&quot;</span>income<span class="token entity" title="\\&quot;">\\&quot;</span></span>
<span class="line">      }&quot;</span></span>
<span class="line">    <span class="token punctuation">;</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token string">&quot;overview&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token function">curl</span> <span class="token string">&quot;<span class="token variable">$API_URL</span>/api/stats/overview&quot;</span> <span class="token operator">|</span> jq <span class="token string">&#39;.data&#39;</span></span>
<span class="line">    <span class="token punctuation">;</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token string">&quot;recent&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token function">curl</span> <span class="token string">&quot;<span class="token variable">$API_URL</span>/api/bills?limit=<span class="token variable">\${2<span class="token operator">:-</span>10}</span>&quot;</span> <span class="token operator">|</span> jq <span class="token string">&#39;.data.bills&#39;</span></span>
<span class="line">    <span class="token punctuation">;</span><span class="token punctuation">;</span></span>
<span class="line">  *<span class="token punctuation">)</span></span>
<span class="line">    <span class="token builtin class-name">echo</span> <span class="token string">&quot;Usage: <span class="token variable">$0</span> {add-expense|add-income|overview|recent}&quot;</span></span>
<span class="line">    <span class="token builtin class-name">echo</span> <span class="token string">&quot;Examples:&quot;</span></span>
<span class="line">    <span class="token builtin class-name">echo</span> <span class="token string">&quot;  <span class="token variable">$0</span> add-expense <span class="token entity" title="\\&quot;">\\&quot;</span>Coffee<span class="token entity" title="\\&quot;">\\&quot;</span> 4.50 dining&quot;</span></span>
<span class="line">    <span class="token builtin class-name">echo</span> <span class="token string">&quot;  <span class="token variable">$0</span> add-income <span class="token entity" title="\\&quot;">\\&quot;</span>Salary<span class="token entity" title="\\&quot;">\\&quot;</span> 3000&quot;</span></span>
<span class="line">    <span class="token builtin class-name">echo</span> <span class="token string">&quot;  <span class="token variable">$0</span> overview&quot;</span></span>
<span class="line">    <span class="token builtin class-name">echo</span> <span class="token string">&quot;  <span class="token variable">$0</span> recent 5&quot;</span></span>
<span class="line">    <span class="token punctuation">;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">esac</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="more-examples" tabindex="-1"><a class="header-anchor" href="#more-examples"><span>More Examples</span></a></h2><p>For more advanced examples and integrations:</p><ul><li><a href="/examples/advanced-filtering.html" target="_blank" rel="noopener noreferrer">Advanced Filtering</a></li><li><a href="/examples/statistics-dashboard.html" target="_blank" rel="noopener noreferrer">Statistics Dashboard</a></li><li><a href="/examples/integration.html" target="_blank" rel="noopener noreferrer">Third-party Integrations</a></li></ul>`,27)]))}const i=s(e,[["render",o]]),u=JSON.parse('{"path":"/examples/","title":"Examples","lang":"en-US","frontmatter":{},"git":{"updatedTime":1752037345000,"contributors":[{"name":"0x3st","username":"0x3st","email":"findmethroughemail@gmail.com","commits":1,"url":"https://github.com/0x3st"}],"changelog":[{"hash":"30ad187db0c62f38d050bfa7fe208a20b30ebba9","time":1752037345000,"email":"findmethroughemail@gmail.com","author":"0x3st","message":"v1.0.0 formal update"}]},"filePathRelative":"examples/README.md"}');export{i as comp,u as data};
